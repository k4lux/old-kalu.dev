{"version":3,"file":"static/webpack/static/development/pages/resume-creator.js.f4fa23f9ed99efb3e25b.hot-update.js","sources":["webpack:///./pages/resume-creator.js"],"sourcesContent":["import React, { Component } from 'react'\n\nimport Page from '_templates/page'\nimport PageTitle from '_atoms/page-title'\nimport Container from '_atoms/container'\nimport FormSection from '_molecules/form-section'\nimport Input from '_atoms/input'\nimport TextArea from '_atoms/text-area'\nimport FormDescription from '_atoms/form-description'\nimport EmploymentWizard from '_organisms/employment-wizard'\nimport EducationWizard from '_organisms/education-wizard'\nimport AddButton from '_atoms/add-button'\nimport UploadPhotoField from '_atoms/upload-photo-field'\n\nclass ResumeCreator extends Component {\n  state = {\n    firstName: '',\n    lastName: '',\n    photo: '',\n    jobTitle: '',\n    email: '',\n    phone: '',\n    address: '',\n    professionalSummary: '',\n    employments: [],\n    educations: [],\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.handleEmploymentAdd = this.handleEmploymentAdd.bind(this)\n    this.handleEmploymentRemove = this.handleEmploymentRemove.bind(this)\n    this.handleEmploymentChange = this.handleEmploymentChange.bind(this)\n    this.handleInputChange = this.handleInputChange.bind(this)\n    this.handlePhotoLoad = this.handlePhotoLoad.bind(this)\n  }\n\n  handleEmploymentToggle(index) {\n    this.setState(prevState => ({\n      employments: prevState.employments.map((employment, currentIndex) => {\n        if (index === currentIndex) {\n          employment.isOpen = !employment.isOpen\n        }\n\n        return employment\n      })\n    }))\n  }\n\n  handleEmploymentAdd() {\n    this.setState(prevState => {\n      const employments = prevState.employments.map(\n        employment => ({...employment, isOpen: false})\n      )\n      \n      return {\n        employments: [...employments, {\n          jobTitle: '',\n          employer: '',\n          city: '',\n          startDate: '',\n          endDate: '',\n          description: '',\n          isOpen: true,\n          hasFocus: true,\n        }]\n      }\n    })\n  }\n\n  handleEmploymentRemove(index) {\n    this.setState(prevState => ({\n      employments: prevState.employments.filter(\n        (employment, currentIndex) => index !== currentIndex\n      )\n    }))\n  }\n\n  handleEmploymentChange(index, name, value) {\n    this.setState(prevState => ({\n      employments: prevState.employments.map((employment, currentIndex) => {\n        if (index === currentIndex) {\n          employment = { ...employment, [name]: value }\n        }\n\n        return employment\n      })\n    }))\n  }\n\n  handleEmploymentFocus(index) {\n    this.setState(prevState => ({\n      employments: prevState.employments.map(\n        (employment, currentIndex) => {\n          if (index === currentIndex) {\n            employment.hasFocus = false\n          }\n\n          return employment\n        }\n      )\n    }))\n  }\n\n  handleInputChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value,\n    })\n  }\n\n  handlePhotoLoad(base64) {\n    this.setState({\n      photo: base64\n    })\n  }\n\n  render() {\n    const { \n      employments,\n      educations,\n      firstName,\n      lastName,\n      photo,\n      jobTitle,\n      email,\n      phone,\n      address,\n      professionalSummary,\n    } = this.state\n\n    return (\n      <Page title=\"Resume Creator\">\n        <Container>\n          <PageTitle>Resume Creator</PageTitle>\n          <FormSection title=\"Personal Details\">\n            <Input \n              id=\"firstName\" \n              name=\"firstName\" \n              label=\"First Name\" \n              value={firstName} \n              onChange={this.handleInputChange}\n            />\n            <Input \n              id=\"lastName\" \n              name=\"lastName\" \n              label=\"Last Name\"\n              value={lastName}\n              onChange={this.handleInputChange}\n            />\n            <UploadPhotoField photoSrc={photo} onPhotoLoad={this.handlePhotoLoad} />\n            <Input \n              id=\"jobTitle\" \n              name=\"jobTitle\" \n              label=\"Job Title\"\n              value={jobTitle}\n              onChange={this.handleInputChange}\n            />\n            <Input \n              id=\"email\" \n              name=\"email\" \n              label=\"Email\" \n              type=\"email\"\n              value={email}\n              onChange={this.handleInputChange} \n            />\n            <Input \n              id=\"phone\" \n              name=\"phone\" \n              label=\"Phone\" \n              type=\"tel\"\n              value={phone}\n              onChange={this.handleInputChange}\n            />\n            <Input \n              id=\"address\" \n              name=\"address\" \n              label=\"address\" \n              type=\"Address\"\n              value={address}\n              onChange={this.handleInputChange}\n            />\n          </FormSection>\n          <FormSection title=\"Professional Summary\">\n            <TextArea \n              id=\"professionalSummary\"\n              name=\"professionalSummary\"\n              label=\"Include 2-3 clear sentences about your overall exerience\"\n              onChange={this.handleInputChange}\n              value={professionalSummary}\n            />\n          </FormSection>\n          <FormSection title=\"Employment History\">\n            <FormDescription>\n              Include your last 10 years of relevant experience and dates in this section. List your most recent position first.\n            </FormDescription>\n            {employments.map(({ isOpen, hasFocus, ...employment }, index) => (\n              <EmploymentWizard\n                key={index}\n                isOpen={isOpen}\n                hasFocus={hasFocus}\n                employment={employment}\n                onToggle={() => this.handleEmploymentToggle(index)}\n                onChange={(name, value) => this.handleEmploymentChange(index, name, value)}\n                onRemove={() => this.handleEmploymentRemove(index)}\n                onFocus={() => this.handleEmploymentFocus(index)}\n              />\n            ))}\n            <AddButton onClick={this.handleEmploymentAdd}>Add employment</AddButton>\n          </FormSection>\n          <FormSection title=\"Education\">\n            <FormDescription>\n              If relevant, include your most recent educational achievements and the dates here\n            </FormDescription>\n            {educations.map(({ isOpen, hasFocus, ...education }, index) => (\n              <EducationWizard\n                key={index}\n                isOpen={isOpen}\n                hasFocus={hasFocus}\n                education={education}\n                onToggle={() => this.handleEducationToggle(index)}\n                onChange={(name, value) => this.handleEducationChange(index, name, value)}\n                onRemove={() => this.handleEducationRemove(index)}\n                onFocus={() => this.handleEducationFocus(index)}\n              />\n            ))}\n            <AddButton onClick={this.handleEmploymentAdd}>Add employment</AddButton>\n          </FormSection>\n        </Container>\n      </Page>\n    )\n  }\n}\n\nexport default ResumeCreator\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAcA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AACA;AAeA;AACA;AACA;AACA;AACA;AAPA;AAQA;AACA;;;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AASA;;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AADA;AAYA;AACA;;;AAEA;AACA;AAAA;AACA;AACA;AAAA;AAFA;AAAA;AAKA;;;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AASA;;;AAEA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAWA;;;AAEA;AACA;AAGA;;;AAEA;AACA;AACA;AADA;AAGA;;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AAzNA;AACA;AA2NA;;;;A","sourceRoot":""}