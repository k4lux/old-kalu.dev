{"version":3,"file":"static/webpack/static/development/pages/resume-creator.js.fa593aaa170f7cf6db8c.hot-update.js","sources":["webpack:///./components/atoms/skill-level-field/index.js","webpack:///./components/organisms/skill-wizard/index.js","webpack:///./pages/resume-creator.js"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport styles from './styles.css'\nimport inputStyles from '_atoms/input/styles.css'\n\nconst LEVELS = [\n  {\n    value: 1,\n    label: 'Novice',\n    style: styles.levelNovice,\n  },\n  {\n    value: 2,\n    label: 'Beginner',\n    style: styles.levelBeginner,\n  },\n  {\n    value: 3,\n    label: 'Skillful',\n    style: styles.levelSkillful,\n  },\n  {\n    value: 4,\n    label: 'Experienced',\n    style: styles.levelExperienced,\n  },\n  {\n    value: 5,\n    label: 'Expert',\n    style: styles.levelExpert,\n  },\n]\n\nconst SkillLevelField = ({\n  id,\n  name,\n  label,\n  value,\n  onChange\n}) => (\n  <div className={inputStyles.container}>\n    {label && <label className={inputStyles.label} htmlFor={id}>{label}</label>}\n\n    <div className={styles.inputStyles.input}>\n      {LEVELS.map((level, index) => {\n        const isLevelActive = { [styles.activeLevel]: value === level.value };\n\n        return (\n          <button \n            key={index}\n            type=\"button\" \n            onClick={() => onChange(level.value)} \n            className={classNames(styles.level, level.style, isLevelActive)}\n          />\n        )\n      })}\n    </div>\n  </div>\n)\n\nSkillLevelField.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  label: PropTypes.string,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n}\n\nSkillLevelField.propTypes = {\n  id: '',\n  name: '',\n  label: '',\n  value: '',\n  onChange: () => {},\n}\n\nexport default SkillLevelField\n","import React, { createRef } from 'react'\nimport PropTypes from 'prop-types'\n\nimport WizardAccordion from '_molecules/wizard-accordion'\nimport Input from '_atoms/input'\nimport SkillLevelField from '_atoms/skill-level-field'\nimport useInputFocus from '_hooks/use-input-focus'\n\nconst SkillWizard = ({ \n  hasFocus, \n  skill, \n  onChange,\n  onFocus,\n  ...wizardAccordionProps\n}) => {\n  const firstInputRef = createRef()\n\n  useInputFocus(firstInputRef, hasFocus, onFocus)\n\n  const handleChange = event => {\n    onChange(event.target.name, event.target.value)\n  }\n\n  const handleSkillChange = value => {\n    onChange('level', value)\n  }\n\n  return (\n    <WizardAccordion\n      title={skill.name}\n      subtitle={skill.level}\n      {...wizardAccordionProps}\n    >\n      <Input\n        id=\"skillName\"\n        name=\"name\"\n        label=\"Skill\"\n        value={skill.name} \n        onChange={handleChange}\n        ref={firstInputRef}\n      />\n      <SkillLevelField\n        id=\"skillLevel\"\n        name=\"level\"\n        label=\"Level\"\n        value={skill.level} \n        onChange={handleSkillChange}\n      />\n    </WizardAccordion>\n  )\n}\n\nSkillWizard.propTypes = {\n  hasFocus: PropTypes.bool,\n  skill: PropTypes.shape({\n    school: PropTypes.string,\n    degree: PropTypes.string,\n    city: PropTypes.string,\n    startDate: PropTypes.string,\n    endDate: PropTypes.string,\n    description: PropTypes.description,\n  }), \n  onChange: PropTypes.func,\n  onFocus: PropTypes.func,\n}\n\nSkillWizard.defaultProps = {\n  hasFocus: false,\n  skill: {\n    level: '',\n    name: '',\n  }, \n  onChange: () => {},\n  onFocus: () => {},\n}\n\nexport default SkillWizard\n","import React, { Component } from 'react'\n\nimport Page from '_templates/page'\nimport PageTitle from '_atoms/page-title'\nimport Container from '_atoms/container'\nimport FormSection from '_molecules/form-section'\nimport Input from '_atoms/input'\nimport TextArea from '_atoms/text-area'\nimport FormDescription from '_atoms/form-description'\nimport EmploymentWizard from '_organisms/employment-wizard'\nimport EducationWizard from '_organisms/education-wizard'\nimport SkillWizard from '_organisms/skill-wizard'\nimport AddButton from '_atoms/add-button'\nimport UploadPhotoField from '_atoms/upload-photo-field'\n\nclass ResumeCreator extends Component {\n  WIZARD_DEFAULT_VALUES = {\n    employments: {\n      jobTitle: '',\n      employer: '',\n    },\n    educations: {\n      school: '',\n      degree: '',\n    }\n  }\n\n  state = {\n    firstName: '',\n    lastName: '',\n    photo: '',\n    jobTitle: '',\n    email: '',\n    phone: '',\n    address: '',\n    professionalSummary: '',\n    employments: [],\n    educations: [],\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.handleWizardAdd = this.handleWizardAdd.bind(this)\n    this.handleWizardRemove = this.handleWizardRemove.bind(this)\n    this.handleWizardChange = this.handleWizardChange.bind(this)\n    this.handleInputChange = this.handleInputChange.bind(this)\n    this.handlePhotoLoad = this.handlePhotoLoad.bind(this)\n  }\n\n  handleWizardToggle(collection, index) {\n    this.setState(prevState => ({\n      [collection]: prevState[collection].map((item, currentIndex) => {\n        if (index === currentIndex) {\n          item.isOpen = !item.isOpen\n        }\n\n        return item\n      })\n    }))\n  }\n\n  handleWizardAdd(collection) {\n    this.setState(prevState => {\n      const items = prevState[collection].map(\n        item => ({...item, isOpen: false})\n      )\n\n      return {\n        [collection]: [...items, {\n          ...this.WIZARD_DEFAULT_VALUES[collection],\n          startDate: '',\n          endDate: '',\n          description: '',\n          isOpen: true,\n          hasFocus: true,\n        }]\n      }\n    })\n  }\n\n  handleWizardRemove(collection, index) {\n    this.setState(prevState => ({\n      [collection]: prevState[collection].filter(\n        (item, currentIndex) => index !== currentIndex\n      )\n    }))\n  }\n\n  handleWizardChange(collection, index, name, value) {\n    this.setState(prevState => ({\n      [collection]: prevState[collection].map((item, currentIndex) => {\n        if (index === currentIndex) {\n          item = { ...item, [name]: value }\n        }\n\n        return item\n      })\n    }))\n  }\n\n  handleWizardFocus(collection, index) {\n    this.setState(prevState => ({\n      [collection]: prevState[collection].map(\n        (item, currentIndex) => {\n          if (index === currentIndex) {\n            item.hasFocus = false\n          }\n\n          return item\n        }\n      )\n    }))\n  }\n\n  handleInputChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value,\n    })\n  }\n\n  handlePhotoLoad(base64) {\n    this.setState({\n      photo: base64\n    })\n  }\n\n  render() {\n    const { \n      employments,\n      educations,\n      firstName,\n      lastName,\n      photo,\n      jobTitle,\n      email,\n      phone,\n      address,\n      professionalSummary,\n    } = this.state\n\n    return (\n      <Page title=\"Resume Creator\">\n        <Container>\n          <PageTitle>Resume Creator</PageTitle>\n          <FormSection title=\"Personal Details\">\n            <Input \n              id=\"firstName\" \n              name=\"firstName\" \n              label=\"First Name\" \n              value={firstName} \n              onChange={this.handleInputChange}\n            />\n            <Input \n              id=\"lastName\" \n              name=\"lastName\" \n              label=\"Last Name\"\n              value={lastName}\n              onChange={this.handleInputChange}\n            />\n            <UploadPhotoField photoSrc={photo} onPhotoLoad={this.handlePhotoLoad} />\n            <Input \n              id=\"jobTitle\" \n              name=\"jobTitle\" \n              label=\"Job Title\"\n              value={jobTitle}\n              onChange={this.handleInputChange}\n            />\n            <Input \n              id=\"email\" \n              name=\"email\" \n              label=\"Email\" \n              type=\"email\"\n              value={email}\n              onChange={this.handleInputChange} \n            />\n            <Input \n              id=\"phone\" \n              name=\"phone\" \n              label=\"Phone\" \n              type=\"tel\"\n              value={phone}\n              onChange={this.handleInputChange}\n            />\n            <Input \n              id=\"address\" \n              name=\"address\" \n              label=\"address\" \n              type=\"Address\"\n              value={address}\n              onChange={this.handleInputChange}\n            />\n          </FormSection>\n          <FormSection title=\"Professional Summary\">\n            <TextArea \n              id=\"professionalSummary\"\n              name=\"professionalSummary\"\n              label=\"Include 2-3 clear sentences about your overall exerience\"\n              onChange={this.handleInputChange}\n              value={professionalSummary}\n            />\n          </FormSection>\n          <FormSection title=\"Employment History\">\n            <FormDescription>\n              Include your last 10 years of relevant experience and dates in this section. List your most recent position first.\n            </FormDescription>\n            {employments.map(({ isOpen, hasFocus, ...employment }, index) => (\n              <EmploymentWizard\n                key={index}\n                isOpen={isOpen}\n                hasFocus={hasFocus}\n                employment={employment}\n                onToggle={() => this.handleWizardToggle('employments', index)}\n                onChange={(name, value) => this.handleWizardChange('employments', index, name, value)}\n                onRemove={() => this.handleWizardRemove('employments', index)}\n                onFocus={() => this.handleWizardFocus('employments', index)}\n              />\n            ))}\n            <AddButton onClick={() => this.handleWizardAdd('employments')}>Add employment</AddButton>\n          </FormSection>\n          <FormSection title=\"Education\">\n            <FormDescription>\n              If relevant, include your most recent educational achievements and the dates here\n            </FormDescription>\n            {educations.map(({ isOpen, hasFocus, ...education }, index) => (\n              <EducationWizard\n                key={index}\n                isOpen={isOpen}\n                hasFocus={hasFocus}\n                education={education}\n                onToggle={() => this.handleWizardToggle('educations', index)}\n                onChange={(name, value) => this.handleWizardChange('educations', index, name, value)}\n                onRemove={() => this.handleWizardRemove('educations', index)}\n                onFocus={() => this.handleWizardFocus('educations', index)}\n              />\n            ))}\n            <AddButton onClick={() => this.handleWizardAdd('educations')}>Add employment</AddButton>\n          </FormSection>\n        </Container>\n      </Page>\n    )\n  }\n}\n\nexport default ResumeCreator\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAtBA;AACA;AA0BA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9EA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AAXA;AAcA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAPA;AAUA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5EA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAyBA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAvBA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AALA;AACA;AAuBA;AAZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AACA;AAeA;AACA;AACA;AACA;AACA;AAPA;AAQA;AACA;;;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AAGA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;;;AAEA;AACA;AAAA;AAEA;AAAA;AAFA;AAKA;;;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;;;AAEA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AARA;AAWA;;;AAEA;AACA;AAGA;;;AAEA;AACA;AACA;AADA;AAGA;;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AAlOA;AACA;AAoOA;;;;A","sourceRoot":""}